[{"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\index.js":"1","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\Routes.js":"2","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Signup.js":"3","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Signin.js":"4","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\UserDashboard.js":"5","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\AdminDashboard.js":"6","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Home.js":"7","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Product.js":"8","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Shop.js":"9","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Cart.js":"10","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\PrivateRoute.js":"11","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\AdminRoute.js":"12","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\AddCategory.js":"13","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\AddProduct.js":"14","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Layout.js":"15","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\apiCore.js":"16","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Search.js":"17","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Card.js":"18","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Checkbox.js":"19","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\SingleProduct.js":"20","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\RadioBox.js":"21","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\cartHelper.js":"22","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\fixedPrices.js":"23","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\CartItems.js":"24","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Checkout.js":"25","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\index.js":"26","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\apiAdmin.js":"27","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Menu.js":"28","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\config.js":"29","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\ShowImage.js":"30","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\Orders.js":"31","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Profile.js":"32","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\apiUser.js":"33","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\UpdateProduct.js":"34","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\AdminCard.js":"35"},{"size":155,"mtime":1613607881900,"results":"36","hashOfConfig":"37"},{"size":1820,"mtime":1617992835615,"results":"38","hashOfConfig":"37"},{"size":2697,"mtime":1616450053285,"results":"39","hashOfConfig":"37"},{"size":2772,"mtime":1616376697558,"results":"40","hashOfConfig":"37"},{"size":2907,"mtime":1617840182195,"results":"41","hashOfConfig":"37"},{"size":1730,"mtime":1617992851574,"results":"42","hashOfConfig":"37"},{"size":2854,"mtime":1617991040165,"results":"43","hashOfConfig":"37"},{"size":2154,"mtime":1616615744694,"results":"44","hashOfConfig":"37"},{"size":3938,"mtime":1617992512569,"results":"45","hashOfConfig":"37"},{"size":2926,"mtime":1617637104832,"results":"46","hashOfConfig":"37"},{"size":515,"mtime":1612719415086,"results":"47","hashOfConfig":"37"},{"size":548,"mtime":1612720633155,"results":"48","hashOfConfig":"37"},{"size":2305,"mtime":1617630544828,"results":"49","hashOfConfig":"37"},{"size":5630,"mtime":1617630564844,"results":"50","hashOfConfig":"37"},{"size":562,"mtime":1616449185522,"results":"51","hashOfConfig":"37"},{"size":3142,"mtime":1617992489853,"results":"52","hashOfConfig":"37"},{"size":3305,"mtime":1616708036652,"results":"53","hashOfConfig":"37"},{"size":3301,"mtime":1616374179414,"results":"54","hashOfConfig":"37"},{"size":1009,"mtime":1614450180855,"results":"55","hashOfConfig":"37"},{"size":2438,"mtime":1617632022362,"results":"56","hashOfConfig":"37"},{"size":602,"mtime":1615411751744,"results":"57","hashOfConfig":"37"},{"size":2630,"mtime":1617632374277,"results":"58","hashOfConfig":"37"},{"size":442,"mtime":1614450790656,"results":"59","hashOfConfig":"37"},{"size":2041,"mtime":1617638879237,"results":"60","hashOfConfig":"37"},{"size":5727,"mtime":1617666926060,"results":"61","hashOfConfig":"37"},{"size":1454,"mtime":1615409773650,"results":"62","hashOfConfig":"37"},{"size":3747,"mtime":1617989230088,"results":"63","hashOfConfig":"37"},{"size":4499,"mtime":1617988167880,"results":"64","hashOfConfig":"37"},{"size":51,"mtime":1612226563550,"results":"65","hashOfConfig":"37"},{"size":353,"mtime":1613607283248,"results":"66","hashOfConfig":"37"},{"size":4579,"mtime":1617747558307,"results":"67","hashOfConfig":"37"},{"size":2892,"mtime":1617750260642,"results":"68","hashOfConfig":"37"},{"size":1526,"mtime":1617839238930,"results":"69","hashOfConfig":"37"},{"size":6384,"mtime":1617991342564,"results":"70","hashOfConfig":"37"},{"size":2601,"mtime":1617992701696,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"56tok4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\index.js",[],["156","157"],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\Routes.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Signup.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Signin.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\UserDashboard.js",["158"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getPurchaseHistory } from \"./apiUser\";\r\nimport moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const {\r\n    user: { _id, name, email, role },\r\n  } = isAuthenticated();\r\n\r\n  const token = isAuthenticated().token;\r\n  const init = (userId, token) => {\r\n    getPurchaseHistory(userId, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setHistory(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(_id, token);\r\n  }, []);\r\n\r\n  const userlinks = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <h4 className=\"card-header\">User Links</h4>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <Link className=\"nav-link\" to=\"/cart\">\r\n              My Cart\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n              Update Profile\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const userInfo = () => {\r\n    return (\r\n      <div className=\"card mb-5\">\r\n        <h3 className=\"card-header\">User Information</h3>\r\n\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">{name}</li>\r\n          <li className=\"list-group-item\">{email}</li>\r\n          <li className=\"list-group-item\">\r\n            {role === 1 ? \"Admin\" : \"Registered User\"}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const purchaseHistory = (history) => {\r\n    return (\r\n      <div className=\"card mb-5\">\r\n        <h3 className=\"card-header\"> Purchase History </h3>\r\n\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            {history.map((historyEach, index) => {\r\n              return (\r\n                <div>\r\n                  <hr />\r\n                  {historyEach.products.map((product, index) => (\r\n                    <div key={index}>\r\n                      <h6>Product Name: {product.name}</h6>\r\n                      <h6>Product Price: ${product.price}</h6>\r\n                      <h6>Bought: {moment(product.createdAt).fromNow()}</h6>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              );\r\n            })}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"Dashboard\" description={name} className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">{userlinks()}</div>\r\n        <div className=\"col-9\">\r\n          {userInfo()}\r\n          {purchaseHistory(history)}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\AdminDashboard.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Home.js",["159","160"],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Product.js",["161"],"import React, { useState, useEffect } from \"react\";\r\nimport { getProduct, getRelatedProducts } from \"./apiCore\";\r\n\r\nimport Layout from \"./Layout\";\r\nimport Card from \"./Card\";\r\nimport \"./css/Product.css\";\r\n\r\nimport SingleProduct from \"./SingleProduct\";\r\n\r\nconst Product = (props) => {\r\n  const [product, setProduct] = useState({});\r\n  const [relatedProduct, setRelatedProduct] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  const loadSingleProduct = (productId) => {\r\n    getProduct(productId).then((data) => {\r\n      if (data.error) {\r\n        setError(data.error);\r\n      } else {\r\n        setProduct(data);\r\n\r\n        //fetch related products\r\n        getRelatedProducts(data._id).then((data) => {\r\n          if (data.error) {\r\n            setError(error);\r\n          } else {\r\n            console.log(data);\r\n            setRelatedProduct(data);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const productId = props.match.params.productId;\r\n    loadSingleProduct(productId);\r\n  }, [props]);\r\n\r\n  return (\r\n    <Layout className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mt-5 mb-5\">\r\n          <div className=\"container single-product\">\r\n            {product && product.description && (\r\n              <SingleProduct product={product} />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-12 mb-3\">\r\n          <div className=\"product\">\r\n            {product && product.description && <Card product={product} />}\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mb-3\">\r\n          <div className=\"container\">\r\n            <h3 className=\"mb-5\">Related Products</h3>\r\n            <div className=\"row\">\r\n              {relatedProduct.map((product, index) => (\r\n                <div className=\"col-4 mb-3\">\r\n                  <Card key={index} product={product} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Shop.js",["162","163","164"],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Cart.js",["165","166","167"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCartItems, showProductQuantity } from \"./cartHelper\";\r\nimport { updateItem } from \"./cartHelper\";\r\nimport Layout from \"./Layout\";\r\nimport Checkout from \"./Checkout\";\r\nimport CartItems from \"./CartItems\";\r\n\r\nconst Cart = () => {\r\n  const [items, setItems] = useState([]);\r\n  const [run, setRun] = useState(false);\r\n  const [count, setCount] = useState(1);\r\n\r\n  useEffect(() => {\r\n    setItems(getCartItems());\r\n  }, [run]);\r\n\r\n  const getSubTotal = () => {\r\n    return items.reduce((currentValue, nextValue) => {\r\n      // console.log(\"Current value: \", currentValue);\r\n      // console.log(\"Next value: \", nextValue);\r\n\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  const getTax = () => {\r\n    return getSubTotal() * 0.07;\r\n  };\r\n\r\n  const getTotal = () => {\r\n    return getSubTotal() + getTax();\r\n  };\r\n\r\n  const showItems = (items) => {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Your Cart has {`${items.length}`} Items</h2>\r\n\r\n        <div className=\"small-container cart-page\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Product</th>\r\n                <th>Quantity</th>\r\n                <th>Subtotal</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {items.map((item, index) => (\r\n                <CartItems key={index} product={item} setRun={setRun} run={run}>\r\n                  {showProductQuantity(item)}\r\n                </CartItems>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"total-price\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Subtotal</td>\r\n                  <td>${parseFloat(getSubTotal()).toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Tax ( 7% )</td>\r\n                  <td>${parseFloat(getTax()).toFixed(2)}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Total</td>\r\n                  <td>${parseFloat(getTotal()).toFixed(2)}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const noItemsMessage = () => {\r\n    return (\r\n      <h2>\r\n        Your Cart is Empty. <br />\r\n        <Link to=\"/shop\">Continue Shopping</Link>\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout\r\n      className=\"container-fluid\"\r\n      title=\"Shopping Cart\"\r\n      description=\"Manage your cart items.\"\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          {items.length > 0 ? showItems(items) : noItemsMessage()}\r\n        </div>\r\n        <div className=\"col-4\">\r\n          {items.length > 0 ? <Checkout products={items} /> : <></>}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\PrivateRoute.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\AdminRoute.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\AddCategory.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\AddProduct.js",["168","169","170","171"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\n// import { Link } from \"react-router-dom\";\r\nimport { createProduct, getCategories } from \"./apiAdmin\";\r\n\r\nconst AddProduct = () => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n    categories: [],\r\n    category: \"\",\r\n    shipping: \"\",\r\n    quantity: \"\",\r\n    photo: \"\",\r\n    loading: false,\r\n    error: \"\",\r\n    createdProduct: \"\",\r\n    redirectToProfile: false,\r\n    formData: \"\",\r\n  });\r\n\r\n  const { user, token } = isAuthenticated();\r\n  const {\r\n    name,\r\n    description,\r\n    price,\r\n    categories,\r\n    category,\r\n    shipping,\r\n    quantity,\r\n    loading,\r\n    error,\r\n    createdProduct,\r\n    redirectToProfile,\r\n    formData,\r\n  } = values;\r\n\r\n  // load categories and set form data\r\n  const init = () => {\r\n    getCategories().then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          categories: data,\r\n          formData: new FormData(),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\r\n    formData.set(name, value);\r\n    setValues({ ...values, createdProduct: \"\", [name]: value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, loading: true });\r\n\r\n    createProduct(user._id, token, formData).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, createdProduct: \"\" });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          description: \"\",\r\n          photo: \"\",\r\n          price: \"\",\r\n          quantity: \"\",\r\n          loading: false,\r\n          error: \"\",\r\n          formData: new FormData(),\r\n          createdProduct: data.name,\r\n        });\r\n\r\n        document.getElementById(\"selectCategory\").selectedIndex = 0;\r\n        document.getElementById(\"selectShipping\").selectedIndex = 0;\r\n      }\r\n    });\r\n  };\r\n\r\n  const newPostForm = () => (\r\n    <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n      <h4>Post Photo</h4>\r\n      <div className=\"form-group\">\r\n        <label className=\"btn btn-secondary\">\r\n          <input\r\n            onChange={handleChange(\"photo\")}\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            accept=\"image/*\"\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          onChange={handleChange(\"name\")}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={name}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Description</label>\r\n        <textarea\r\n          onChange={handleChange(\"description\")}\r\n          className=\"form-control\"\r\n          value={description}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Price</label>\r\n        <input\r\n          onChange={handleChange(\"price\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={price}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Category</label>\r\n        <select\r\n          onChange={handleChange(\"category\")}\r\n          className=\"form-control\"\r\n          id=\"selectCategory\"\r\n        >\r\n          <option>Please select</option>\r\n          {categories &&\r\n            categories\r\n              .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n              .map((category, index) => (\r\n                <option key={index} value={category._id}>\r\n                  {category.name}\r\n                </option>\r\n              ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Shipping</label>\r\n        <select\r\n          onChange={handleChange(\"shipping\")}\r\n          className=\"form-control\"\r\n          id=\"selectShipping\"\r\n        >\r\n          <option>Please select</option>\r\n          <option value=\"0\">No</option>\r\n          <option value=\"1\">Yes</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Quantity</label>\r\n        <input\r\n          onChange={handleChange(\"quantity\")}\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          value={quantity}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn btn-outline-primary\">Create Product</button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <div\r\n      className=\"alert alert-info\"\r\n      style={{ display: createdProduct ? \"\" : \"none\" }}\r\n    >\r\n      <h2>{`${createdProduct}`} is created!</h2>\r\n    </div>\r\n  );\r\n\r\n  const showLoading = () =>\r\n    loading && (\r\n      <div className=\"alert alert-success\">\r\n        <h2>Loading...</h2>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <Layout title=\"Add a new product\" description={`${user.name}`}>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-md-4\">\r\n          {showLoading()}\r\n          {showSuccess()}\r\n          {showError()}\r\n          {newPostForm()}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Layout.js",["172","173"],"import React from \"react\";\r\nimport Menu from \"./Menu\";\r\nimport \"../styles.css\";\r\n\r\nconst showJumbtron = (title, description) => {\r\n  if (title != \"\" && description != \"\") {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <h2>{title}</h2>\r\n        <p className=\"lead\"> {description} </p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Layout = ({ title = \"\", description = \"\", className, children }) => (\r\n  <div>\r\n    <Menu />\r\n    {showJumbtron(title, description)}\r\n\r\n    <div className={className}>{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\apiCore.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Search.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Card.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Checkbox.js",["174"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst Checkbox = ({ categories, handleFilters }) => {\r\n  const [checked, setChecked] = useState([]);\r\n\r\n  const handleToggle = (categoryId) => () => {\r\n    const currentCategoryId = checked.indexOf(categoryId);\r\n    const newCategoryId = [...checked];\r\n\r\n    if (currentCategoryId === -1) {\r\n      newCategoryId.push(categoryId);\r\n    } else {\r\n      newCategoryId.splice(currentCategoryId, 1);\r\n    }\r\n    setChecked(newCategoryId);\r\n    handleFilters(newCategoryId);\r\n  };\r\n\r\n  return categories\r\n    .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n    .map((category, index) => (\r\n      <li key={index} className=\"list-unstyled\">\r\n        <input\r\n          onChange={handleToggle(category._id)}\r\n          value={checked.indexOf(category._id) === -1}\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n        />\r\n        <label className=\"form-check-label\">{category.name}</label>\r\n      </li>\r\n    ));\r\n};\r\n\r\nexport default Checkbox;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\SingleProduct.js",["175","176","177"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { addItem, updateItem } from \"./cartHelper\";\r\nimport moment from \"moment\";\r\nimport { API } from \"../config\";\r\n\r\nconst SingleProduct = ({ product, setRun = (f) => f, run = undefined }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const showProductStock = (quantity) => {\r\n    return quantity > 0 ? (\r\n      <span className=\"badge badge-primary padge-pill stockValue\">\r\n        In Stock\r\n      </span>\r\n    ) : (\r\n      <span className=\"badge badge-primary padge-pill stockValue\">\r\n        Out of Stock\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const addToCart = () => {\r\n    addItem(product, () => {\r\n      setRedirect(true);\r\n    });\r\n  };\r\n\r\n  const willRedirect = (redirect) => {\r\n    if (redirect) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const showAddToCart = () => {\r\n    return (\r\n      <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\r\n        Add to Cart\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const showProductQuantity = () => {\r\n    if (product.quantity < 10) {\r\n      return (\r\n        <div className=\"limitedProduct\">\r\n          Only {product.quantity} items left!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const showUpdateCart = () => {\r\n    return (\r\n      <input\r\n        type=\"number\"\r\n        value={count}\r\n        min=\"0\"\r\n        max={product.quantity}\r\n        onChange={handleChange(product._id)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleChange = (id) => (event) => {\r\n    setRun(!run);\r\n    let count = event.target.value;\r\n    setCount(count < 1 ? 1 : count);\r\n    if (count >= 1) {\r\n      updateItem(id, count);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-6\">\r\n        {willRedirect(redirect)}\r\n        <img\r\n          alt={product.name}\r\n          src={`${API}/product/photo/${product._id}`}\r\n          width=\"100%\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"col-6\">\r\n        <h1>{product.name}</h1>\r\n        <h4>${product.price}</h4>\r\n        {showProductQuantity()}\r\n        {showUpdateCart()} <br />\r\n        {showAddToCart()}\r\n        <h3 className=\"mt-5\">\r\n          Product Details <i className=\"fa fa-indent\"></i>\r\n        </h3>\r\n        <br />\r\n        <p>{product.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleProduct;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\RadioBox.js",["178"],"import React, { useState } from \"react\";\r\n\r\nconst RadioBox = ({ prices, handleFilters }) => {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event) => {\r\n    handleFilters(event.target.value);\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return prices.map((price, index) => (\r\n    <div key={index}>\r\n      <input\r\n        onChange={handleChange}\r\n        name={price}\r\n        value={`${price._id}`}\r\n        type=\"radio\"\r\n        className=\"mr-2 ml-4\"\r\n      />\r\n      <label className=\"form-check-label\">{price.name}</label>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default RadioBox;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\cartHelper.js",["179","180"],"export const addItem = (item, next) => {\r\n  let cart = [];\r\n  if (typeof window != \"undefined\") {\r\n    let localStorageItem = localStorage.getItem(\"cart\");\r\n    if (localStorageItem) {\r\n      cart = JSON.parse(localStorageItem);\r\n    }\r\n    cart.push({\r\n      ...item,\r\n      count: 1,\r\n    });\r\n\r\n    /*\r\n    - Remove duplicates\r\n    - Build an Array from new Set and turn it back into array using Array.from\r\n        so that leter we can re-map it\r\n    - new Set will only allow unique values in it\r\n    - Thus, pass the ids of each object/product\r\n    - If the loop tries to add the same value again, it will get ignored\r\n    - ...with the array of ids we got on when first map() was used\r\n    - run map() on it again and return the actual product from the cart\r\n    */\r\n\r\n    cart = Array.from(new Set(cart.map((product) => product._id))).map((id) => {\r\n      return cart.find((product) => product._id === id);\r\n    });\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const totalItems = () => {\r\n  if (typeof window != \"undefined\") {\r\n    let localStorageItem = localStorage.getItem(\"cart\");\r\n    if (localStorageItem) {\r\n      return JSON.parse(localStorageItem).length;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const getCartItems = () => {\r\n  if (typeof window != \"undefined\") {\r\n    let localStorageItem = localStorage.getItem(\"cart\");\r\n    if (localStorageItem) {\r\n      return JSON.parse(localStorageItem);\r\n    }\r\n  }\r\n  return [];\r\n};\r\n\r\nexport const updateItem = (id, count) => {\r\n  let cart = [];\r\n  if (typeof window != \"undefined\") {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n\r\n    cart.map((product, index) => {\r\n      if (product._id === id) {\r\n        cart[index].count = count;\r\n      }\r\n    });\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n};\r\n\r\nexport const removeItem = (id) => {\r\n  let cart = [];\r\n  if (typeof window != \"undefined\") {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n\r\n    cart.map((product, index) => {\r\n      if (product._id === id) {\r\n        cart.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n  }\r\n  return cart;\r\n};\r\n\r\nexport const emptyCart = (next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"cart\");\r\n    next();\r\n  }\r\n};\r\n\r\nexport const showProductQuantity = (product) => {\r\n  if (product.quantity < 10) {\r\n    return (\r\n      <div className=\"limitedProduct\">Only {product.quantity} items left!</div>\r\n    );\r\n  }\r\n};\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\fixedPrices.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\CartItems.js",["181"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { updateItem, removeItem } from \"./cartHelper\";\r\nimport { API } from \"../config\";\r\n\r\nimport \"./css/Card.css\";\r\nimport \"./css/Button.css\";\r\nimport \"./css/Cart.css\";\r\n\r\nconst CartItems = ({\r\n  product,\r\n  setRun = (f) => f,\r\n  run = undefined,\r\n  children,\r\n}) => {\r\n  const [count, setCount] = useState(product.count);\r\n\r\n  const handleChange = (product) => (event) => {\r\n    setRun(!run);\r\n    let countValue = event.target.value;\r\n\r\n    if (countValue > product.quantity) {\r\n      countValue = product.quantity;\r\n      setCount(product.quantity);\r\n    } else if (countValue < 1) {\r\n      countValue = 1;\r\n      setCount(1);\r\n    } else {\r\n      setCount(countValue);\r\n    }\r\n\r\n    if (countValue >= 1 && countValue <= product.quantity) {\r\n      updateItem(product._id, countValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>\r\n          <div className=\"cart-info\">\r\n            <Link to={`/product/${product._id}`}>\r\n              <div className=\"cart-img\">\r\n                <img\r\n                  alt={product.name}\r\n                  src={`${API}/product/photo/${product._id}`}\r\n                />\r\n              </div>\r\n            </Link>\r\n\r\n            <div>\r\n              <p>{product.name}</p>\r\n              <small>Price: ${product.price}</small>\r\n              <br />\r\n              <a\r\n                onClick={() => {\r\n                  removeItem(product._id);\r\n                  setRun(!run);\r\n                }}\r\n              >\r\n                Remove\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </td>\r\n\r\n        <td>\r\n          <div>{children}</div>\r\n\r\n          <input\r\n            type=\"number\"\r\n            value={product.count}\r\n            min=\"1\"\r\n            max={product.quantity}\r\n            onChange={handleChange(product)}\r\n          />\r\n        </td>\r\n        <td>${parseFloat(product.price * count).toFixed(2)}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItems;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Checkout.js",["182","183","184"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getBraintreeClientToken,\r\n  processPayment,\r\n  createOrder,\r\n} from \"./apiCore\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\nimport { emptyCart } from \"./cartHelper\";\r\n\r\nconst Checkout = ({ products }) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    clientToken: null,\r\n    error: \"\",\r\n    instance: {},\r\n    address: \"\",\r\n  });\r\n\r\n  const userId = isAuthenticated() && isAuthenticated().user._id;\r\n  const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n  const getToken = (userId, token) => {\r\n    getBraintreeClientToken(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setData({ ...data, error: data.error });\r\n      } else {\r\n        setData({ clientToken: data.clientToken });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken(userId, token);\r\n  }, []);\r\n\r\n  const getSubTotal = () => {\r\n    return products.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  const getTax = () => {\r\n    return getSubTotal() * 0.07;\r\n  };\r\n\r\n  const getTotal = () => {\r\n    return getSubTotal() + getTax();\r\n  };\r\n\r\n  const showCheckout = () => {\r\n    return isAuthenticated() ? (\r\n      <div>{showDropIn()}</div>\r\n    ) : (\r\n      <Link to=\"/signin\">\r\n        <button className=\"btn btn-primary\">Sign In to Checkout</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  const handleAddress = (event) => {\r\n    setData({ ...data, address: event.target.value });\r\n  };\r\n\r\n  let deliveryAddress = data.address;\r\n\r\n  const checkout = () => {\r\n    //send the nonce to your server\r\n    //nonce = data.instance.requestPaymentMethod()\r\n    setData({ loading: true });\r\n\r\n    let nonce;\r\n    let getNonce = data.instance\r\n      .requestPaymentMethod()\r\n      .then((data) => {\r\n        console.log(data);\r\n        nonce = data.nonce;\r\n        //once you have nonce(card type, number, etc.) send nonce as\r\n        // 'paymentMethodNonce' and total to be charged to backend\r\n\r\n        // console.log(\r\n        //   \"send nonce and total to process:\",\r\n        //   nonce,\r\n        //   getTotal(products)\r\n        // );\r\n\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce,\r\n          amount: parseFloat(getTotal(products)).toFixed(2),\r\n        };\r\n        processPayment(userId, token, paymentData)\r\n          .then((res) => {\r\n            console.log(res);\r\n\r\n            //create order\r\n            const createOrderData = {\r\n              products: products,\r\n              transaction_id: res.transaction.id,\r\n              amount: res.transaction.amount,\r\n              address: deliveryAddress,\r\n            };\r\n            createOrder(userId, token, createOrderData)\r\n              .then((res) => {\r\n                //empty cart\r\n                emptyCart(() => {\r\n                  console.log(\"Successful payment. Emptying the cart...\");\r\n                  setTimeout(\"location.reload(true)\", 5000);\r\n                  setData({ loading: false, success: true });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                setData({ loading: false });\r\n              });\r\n\r\n            //create order\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setData({ loading: false });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"DropIn Error: \", error);\r\n        setData({ ...data, error: error.message });\r\n      });\r\n  };\r\n\r\n  // const displayReload = (success) => {\r\n  //   if (success) {\r\n  //     return <div className=\"alert alert-info\">Reloading...</div>;\r\n  //   }\r\n  // };\r\n\r\n  const showLoading = (loading) => loading && <h2>Loading...</h2>;\r\n\r\n  const showDropIn = () => {\r\n    return (\r\n      <div onBlur={() => setData({ ...data, error: \"\" })}>\r\n        {data.clientToken !== null && products.length > 0 ? (\r\n          <div>\r\n            <div className=\"gorm-group mb-3\">\r\n              <label className=\"text-muted\">Delivery Address:</label>\r\n              <textarea\r\n                onChange={handleAddress}\r\n                className=\"form-control\"\r\n                value={data.address}\r\n                placeholder=\"Type your delivery address here...\"\r\n              />\r\n            </div>\r\n\r\n            <DropIn\r\n              options={{\r\n                authorization: data.clientToken,\r\n                paypal: {\r\n                  flow: \"vault\",\r\n                },\r\n              }}\r\n              onInstance={(instance) => (data.instance = instance)}\r\n            />\r\n\r\n            <button onClick={checkout} className=\"btn btn-success\">\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showError = (error) => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-danger\"\r\n        style={{ display: error ? \"\" : \"none\" }}\r\n      >\r\n        {error}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const showSuccess = (success) => {\r\n    return (\r\n      <div\r\n        className=\"alert alert-info\"\r\n        style={{ display: success ? \"\" : \"none\" }}\r\n      >\r\n        Payment was successful. Reloading...\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Checkout</h2>\r\n      <div className=\"small-container cart-page\">\r\n        {showLoading(data.loading)}\r\n        {showSuccess(data.success)}\r\n        {showError(data.error)}\r\n        {showCheckout()}\r\n        {/* {displayReload(data.success)} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\auth\\index.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\Menu.js",["185"],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\config.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\ShowImage.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\Orders.js",["186","187"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues, updateOrderStatus } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [statusValues, setStatusValues] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOrders = () => {\r\n    listOrders(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setOrders(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadStatusValues = () => {\r\n    getStatusValues(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setStatusValues(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n    loadStatusValues();\r\n  }, []);\r\n\r\n  const showOrdersLength = () => {\r\n    if (orders.length > 0) {\r\n      return (\r\n        <h2 className=\"text-danger display-2\">Total Orders: {orders.length}</h2>\r\n      );\r\n    } else {\r\n      return <h2 className=\"text-danger\">No Orders</h2>;\r\n    }\r\n  };\r\n\r\n  const handleStatusChange = (event, orderId) => {\r\n    updateOrderStatus(user._id, token, orderId, event.target.value).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          console.log(\"Status Update Failed\");\r\n        } else {\r\n          loadOrders();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const showInput = (key, value) => (\r\n    <div className=\"input-group mb-2 mr-sm-2\">\r\n      <div className=\"input-group-prepend\">\r\n        <div className=\"input-group-text\">{key}</div>\r\n      </div>\r\n      <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n    </div>\r\n  );\r\n\r\n  const showStatus = (order) => (\r\n    <div className=\"form-group\">\r\n      <h3 className=\"mark mb-4\">Status: {order.status}</h3>\r\n      <select\r\n        className=\"form-control\"\r\n        onChange={(event) => handleStatusChange(event, order._id)}\r\n      >\r\n        <option disabled>Update Status</option>\r\n        {statusValues.map((status, index) => (\r\n          <option key={index} value={status}>\r\n            {status}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Layout title=\"Orders\" description=\"Manage your orders\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4 offset-md-4\">\r\n          {showOrdersLength()}\r\n          {orders.map((order, orderIndex) => {\r\n            return (\r\n              <div\r\n                className=\"mt-5\"\r\n                key={orderIndex}\r\n                style={{ borderBottom: \"5px solid indigo\" }}\r\n              >\r\n                <h2 className=\"mb-5\">\r\n                  <span className=\"bg-primary\">Order ID: {order._id}</span>\r\n                </h2>\r\n\r\n                <ul className=\"list-group mb=2\">\r\n                  <li className=\"list-group-item\">{showStatus(order)}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Transaction ID: {order.transaction_id}\r\n                  </li>\r\n                  <li className=\"list-group-item\">Amount: ${order.amount}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Ordered By: {order.user.name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Ordered: {moment(order.createdAt).fromNow()}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Delivery Address: {order.address}\r\n                  </li>\r\n                </ul>\r\n\r\n                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                  Total Products in the order: {order.products.length}\r\n                </h3>\r\n\r\n                {order.products.map((product, productIndex) => {\r\n                  return (\r\n                    <div\r\n                      className=\"mb-4\"\r\n                      key={productIndex}\r\n                      style={{ padding: \"20px\", border: \"1px solid indigo\" }}\r\n                    >\r\n                      {showInput(\"Product Name\", product.name)}\r\n                      {showInput(\"Product Price\", product.price)}\r\n                      {showInput(\"Product Count\", product.count)}\r\n                      {showInput(\"Product Id\", product._id)}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\Profile.js",["188","189","190"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { read, update, updateUser } from \"./apiUser\";\r\n\r\nconst Profile = ({ match }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const { name, email, password, error, success } = values;\r\n  const { token } = isAuthenticated();\r\n\r\n  const init = (userId) => {\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: true });\r\n      } else {\r\n        setValues({ ...values, name: data.name, email: data.email });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(match.params.userId);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    update(match.params.userId, token, { name, email, password }).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          updateUser(data, () => {\r\n            setValues({\r\n              ...values,\r\n              name: data.name,\r\n              email: data.email,\r\n              success: true,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const redirectUser = (success) => {\r\n    if (success) {\r\n      return <Redirect to=\"/user/dashboard\" />;\r\n    }\r\n  };\r\n\r\n  const profileUpdate = (name, email, password) => (\r\n    <form className=\"container\">\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleChange(\"email\")}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handleChange(\"password\")}\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary\" onClick={clickSubmit}>\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout\r\n      className=\"container-fluid\"\r\n      title=\"Profile\"\r\n      description=\"Update Your Profile\"\r\n    >\r\n      <h2 className=\"mb-4\">Profile Update</h2>\r\n      {profileUpdate(name, email, password)}\r\n      {redirectUser(success)}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\user\\apiUser.js",[],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\admin\\UpdateProduct.js",["191","192","193","194"],"C:\\Users\\prana\\OneDrive\\Desktop\\React\\ecommerce-front\\src\\core\\AdminCard.js",["195","196","197","198","199"],{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":28,"column":6,"nodeType":"206","endLine":28,"endColumn":8,"suggestions":"207"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":10,"nodeType":"210","messageId":"211","endLine":13,"endColumn":24},{"ruleId":"208","severity":1,"message":"212","line":15,"column":10,"nodeType":"210","messageId":"211","endLine":15,"endColumn":15},{"ruleId":"204","severity":1,"message":"213","line":38,"column":6,"nodeType":"206","endLine":38,"endColumn":13,"suggestions":"214"},{"ruleId":"208","severity":1,"message":"212","line":21,"column":10,"nodeType":"210","messageId":"211","endLine":21,"endColumn":15},{"ruleId":"208","severity":1,"message":"215","line":22,"column":17,"nodeType":"210","messageId":"211","endLine":22,"endColumn":25},{"ruleId":"204","severity":1,"message":"216","line":77,"column":6,"nodeType":"206","endLine":77,"endColumn":8,"suggestions":"217"},{"ruleId":"208","severity":1,"message":"218","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":20},{"ruleId":"208","severity":1,"message":"219","line":12,"column":10,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15},{"ruleId":"208","severity":1,"message":"220","line":12,"column":17,"nodeType":"210","messageId":"211","endLine":12,"endColumn":25},{"ruleId":"208","severity":1,"message":"221","line":30,"column":5,"nodeType":"210","messageId":"211","endLine":30,"endColumn":13},{"ruleId":"208","severity":1,"message":"222","line":31,"column":5,"nodeType":"210","messageId":"211","endLine":31,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":36,"column":5,"nodeType":"210","messageId":"211","endLine":36,"endColumn":22},{"ruleId":"204","severity":1,"message":"224","line":57,"column":6,"nodeType":"206","endLine":57,"endColumn":8,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":6,"column":13,"nodeType":"228","messageId":"229","endLine":6,"endColumn":15},{"ruleId":"226","severity":1,"message":"227","line":6,"column":34,"nodeType":"228","messageId":"229","endLine":6,"endColumn":36},{"ruleId":"208","severity":1,"message":"230","line":1,"column":27,"nodeType":"210","messageId":"211","endLine":1,"endColumn":36},{"ruleId":"208","severity":1,"message":"231","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":14},{"ruleId":"208","severity":1,"message":"232","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"233","line":11,"column":9,"nodeType":"210","messageId":"211","endLine":11,"endColumn":25},{"ruleId":"208","severity":1,"message":"234","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":60,"column":31,"nodeType":"237","messageId":"238","endLine":60,"endColumn":33},{"ruleId":"235","severity":1,"message":"236","line":77,"column":31,"nodeType":"237","messageId":"238","endLine":77,"endColumn":33},{"ruleId":"239","severity":1,"message":"240","line":55,"column":15,"nodeType":"241","endLine":60,"endColumn":16},{"ruleId":"204","severity":1,"message":"242","line":37,"column":6,"nodeType":"206","endLine":37,"endColumn":8,"suggestions":"243"},{"ruleId":"208","severity":1,"message":"244","line":75,"column":9,"nodeType":"210","messageId":"211","endLine":75,"endColumn":17},{"ruleId":"245","severity":1,"message":"246","line":109,"column":19,"nodeType":"247","messageId":"248","endLine":109,"endColumn":60},{"ruleId":"208","severity":1,"message":"249","line":15,"column":10,"nodeType":"210","messageId":"211","endLine":15,"endColumn":16},{"ruleId":"208","severity":1,"message":"231","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"204","severity":1,"message":"250","line":37,"column":6,"nodeType":"206","endLine":37,"endColumn":8,"suggestions":"251"},{"ruleId":"208","severity":1,"message":"231","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"212","line":16,"column":34,"nodeType":"210","messageId":"211","endLine":16,"endColumn":39},{"ruleId":"204","severity":1,"message":"252","line":31,"column":6,"nodeType":"206","endLine":31,"endColumn":8,"suggestions":"253"},{"ruleId":"208","severity":1,"message":"231","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"208","severity":1,"message":"221","line":30,"column":5,"nodeType":"210","messageId":"211","endLine":30,"endColumn":13},{"ruleId":"208","severity":1,"message":"222","line":31,"column":5,"nodeType":"210","messageId":"211","endLine":31,"endColumn":13},{"ruleId":"204","severity":1,"message":"254","line":79,"column":6,"nodeType":"206","endLine":79,"endColumn":8,"suggestions":"255"},{"ruleId":"208","severity":1,"message":"256","line":4,"column":10,"nodeType":"210","messageId":"211","endLine":4,"endColumn":17},{"ruleId":"208","severity":1,"message":"218","line":4,"column":19,"nodeType":"210","messageId":"211","endLine":4,"endColumn":29},{"ruleId":"208","severity":1,"message":"257","line":4,"column":31,"nodeType":"210","messageId":"211","endLine":4,"endColumn":41},{"ruleId":"208","severity":1,"message":"258","line":5,"column":10,"nodeType":"210","messageId":"211","endLine":5,"endColumn":21},{"ruleId":"208","severity":1,"message":"259","line":14,"column":20,"nodeType":"210","messageId":"211","endLine":14,"endColumn":31},"no-native-reassign",["260"],"no-negated-in-lhs",["261"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["262"],"no-unused-vars","'productsBySell' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["263"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["264"],"'updateItem' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["265"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","'moment' is defined but never used.","'showProductStock' is assigned a value but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["266"],"'getNonce' is assigned a value but never used.","no-implied-eval","Implied eval. Consider passing a function instead of a string.","CallExpression","impliedEval","'button' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["267"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["269"],"'addItem' is defined but never used.","'removeItem' is defined but never used.","'getProducts' is defined but never used.","'setRedirect' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [_id, token]",{"range":"286","text":"287"},"Update the dependencies array to be: [loadSingleProduct, props]",{"range":"288","text":"289"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"290","text":"291"},"Update the dependencies array to be: [init]",{"range":"292","text":"293"},"Update the dependencies array to be: [token, userId]",{"range":"294","text":"295"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"296","text":"297"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"298","text":"299"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"300","text":"301"},[724,726],"[_id, token]",[1036,1043],"[loadSingleProduct, props]",[2019,2021],"[limit, loadFilteredResults, myFilters.filters, skip]",[1227,1229],"[init]",[993,995],"[token, userId]",[964,966],"[loadOrders, loadStatusValues]",[838,840],"[init, match.params.userId]",[1857,1859],"[init, match.params.productId]"]